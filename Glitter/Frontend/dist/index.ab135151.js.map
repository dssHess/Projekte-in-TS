{"mappings":"AAAA,MAAM;IACF,GAAG;IACH,KAAK;IACL,KAAK;IACL,SAAS;IAET,YAAY,IAAI,CAAE;QACd,IAAI,CAAC,EAAE,GAAG,KAAK,EAAE;QACjB,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI;QACrB,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,KAAK,QAAQ,EAAE,kBAAkB,KAAK,MAAK,IAAI,KAAK,KAAK,QAAQ,EAAE,kBAAkB;IAClH;AACJ;AAEA,SAAS,WAAW,KAAK,EAAE;IACvB,OAAO,CAAC;;;;;;;;sEAQ0D,EAAE,MAAM,IAAI,CAAC;uEACZ,EAAE,MAAM,QAAQ,CAAC;;;;;eAKzE,EAAE,MAAM,IAAI,CAAC;;;IAGxB,CAAC;AACL;AAEA,SAAS,cAAc,MAAM,EAAE;IAC3B,SAAS,cAAc,CAAC,qBAAqB,SAAS,GAAG,IAAI;IAE7D,OACK,GAAG,CAAC,CAAA,QAAS,WAAW,QACxB,OAAO,CAAC,CAAA,QAAS,SAAS,cAAc,CAAC,qBAAqB,SAAS,IAAI;AACpF;AAEA;;;CAGC,GACD,SAAS,YAAY;IACjB,MAAM,YAAY,SAAS,cAAc,CAAC,iBAAiB,KAAK;IAChE,MAAM,YAAY,SAAS,cAAc,CAAC,iBAAiB,KAAK;IAChE,mBAAmB,WAAW;AAClC;AAEA,SAAS,YAAY;IACjB,SAAS,cAAc,CAAC,iBAAiB,KAAK,GAAG,IAAI;IACrD,SAAS,cAAc,CAAC,iBAAiB,KAAK,GAAG,IAAI;AACzD;AAEA,SAAS,YAAY;IACjB,MAAM,eAAe,SAAS,cAAc,CAAC;IAC7C,MAAM,KAAK,CAAC,cAAc,IAAI;AAClC;AAEA;;;CAGC,GACD,SAAS,uBAAuB;IAC5B,MAAM,gCACD,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI,IACpB,IAAI,CAAC,CAAA,OAAQ;QACV,MAAM,SAAS,KAAK,GAAG,CAAC,CAAA,QAAS,IAAI,MAAM;QAC3C,cAAc;IAClB;AACR;AAEA,SAAS,mBAAmB,SAAS,EAAE,SAAS,EAAE;IAC9C,MAAM,cAAc;QAChB,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,SAAS,CAAC;YACjB,MAAM;YACN,MAAM;YACN,UAAU,IAAI;QAClB;IACJ;IAEA,MAAM,gCAAgC,aACjC,IAAI,CAAC,CAAA,MAAO;QACT,IAAI,IAAI,MAAM,KAAK,KAAK;YACpB,MAAM,YAAY,CAAC;gBACf,SAAS;gBACT,QAAQ;gBACR,KAAK;gBACL,SAAS;YACb;YACA;YACA;YACA;QACJ,CAAC;IACL;AACR;AAEA,QAAQ;AACR","sources":["src/glitterClient.js"],"sourcesContent":["class Glitt {\r\n    id;\r\n    user;\r\n    text;\r\n    datetime;\r\n\r\n    constructor(data) {\r\n        this.id = data.id;\r\n        this.user = data.user;\r\n        this.text = data.text;\r\n        this.datetime = new Date(data.datetime).toLocaleDateString() + \" \"+ new Date(data.datetime).toLocaleTimeString();\r\n    }\r\n}\r\n\r\nfunction renderCard(glitt) {\r\n    return `\r\n    <div class=\"uk-card uk-card-default uk-width-1-2@m gl-container-center\" style=\"margin-bottom: 30px;\">\r\n        <div class=\"uk-card-header\">\r\n            <div class=\"uk-grid-small uk-flex-middle\" uk-grid>\r\n                <div class=\"uk-width-auto\">\r\n                    <img class=\"uk-border-circle\" width=\"40\" height=\"40\" src=\"https://i.pravatar.cc/40\" alt=\"Avatar\">\r\n                </div>\r\n                <div class=\"uk-width-expand\">\r\n                    <h3 class=\"uk-card-title uk-margin-remove-bottom\">${glitt.user}</h3>\r\n                    <p class=\"uk-text-meta uk-margin-remove-top\"><time>${glitt.datetime}</time></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"uk-card-body\">\r\n            <p>${glitt.text}</p>\r\n        </div>\r\n    </div>\r\n    `\r\n}\r\n\r\nfunction displayGlitts(glitts) {\r\n    document.getElementById(\"gl-card-container\").innerHTML = null\r\n\r\n    glitts\r\n        .map(glitt => renderCard(glitt))\r\n        .forEach(glitt => document.getElementById(\"gl-card-container\").innerHTML += glitt)\r\n}\r\n\r\n/**\r\n * Handles the onClick event of the save button when creating a new Glitt. \r\n * \r\n */\r\nfunction saveGlitt() {\r\n    const glittText = document.getElementById(\"gl-glitt-text\").value;\r\n    const glittName = document.getElementById(\"gl-glitt-name\").value;\r\n    postGlittToBackend(glittName, glittText)\r\n}\r\n\r\nfunction resetForm() {\r\n    document.getElementById(\"gl-glitt-text\").value = null;\r\n    document.getElementById(\"gl-glitt-name\").value = null;\r\n}\r\n\r\nfunction hideModal() {\r\n    const modalElement = document.getElementById(\"gl-create-glitt-modal\")\r\n    UIkit.modal(modalElement).hide();\r\n}\r\n\r\n/**\r\n * This function fetches the data from the backend. \r\n * \r\n */\r\nfunction getGlittsFromBackend() {\r\n    fetch(\"http://localhost:4000/glitts\")\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            const glitts = json.map(glitt => new Glitt(glitt))\r\n            displayGlitts(glitts)\r\n        })\r\n}\r\n\r\nfunction postGlittToBackend(glittName, glittText) {\r\n    const fetchConfig = {\r\n        method: \"POST\", \r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ \r\n            user: glittName,\r\n            text: glittText,\r\n            datetime: new Date()\r\n        })\r\n    }\r\n    \r\n    fetch(\"http://localhost:4000/glitts\", fetchConfig)\r\n        .then(res => {\r\n            if (res.status === 201) {\r\n                UIkit.notification({\r\n                    message: \"Glitt created!\",\r\n                    status: \"success\",\r\n                    pos: \"bottom-center\",\r\n                    timeout: 3_000\r\n                });\r\n                resetForm()\r\n                getGlittsFromBackend()\r\n                hideModal()\r\n            }\r\n        })\r\n}\r\n\r\n/// MAIN\r\ngetGlittsFromBackend()"],"names":[],"version":3,"file":"index.ab135151.js.map","sourceRoot":"/__parcel_source_root/"}